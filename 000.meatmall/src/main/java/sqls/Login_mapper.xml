<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.login">
	
	<select id="login" parameterType="Map" resultType="UserDto">
		SELECT USER_NUM
			 , USER_ID
			 , USER_PW
			 , USER_NAME
			 , USER_NICK
			 , USER_PH
			 , USER_ADDR
			 , USER_ADDR_DETAIL
			 , USER_EMAIL
			 , USER_ENABLED
			 , USER_BUSINESSNUM
			 , LICENSE_LEVEL
			 , USER_ROLE
			 , USER_STOP_DATE
			 , LOGIN_FAIL_COUNT
			 , LOGIN_LAST_TRY_DATE
		  FROM USER_INFO
		 WHERE USER_ID = #{user_id}
		   AND USER_PW = #{user_pw}
	</select>
	
	<select id="idChk" parameterType="String" resultType="String">
		SELECT USER_NUM
		  FROM USER_INFO
		 WHERE USER_ID = #{user_id}
	</select>
	
	<select id="idLockCheck" parameterType="int" resultType="int">
		SELECT COUNT(1) CNT
		  FROM USER_INFO
		 WHERE USER_NUM = #{user_num}
		   AND LOGIN_FAIL_COUNT > 4
		   AND LOGIN_LAST_TRY_DATE + ( 1 / 24 / 60 ) > SYSDATE
	</select>
	
	<update id="lockClear" parameterType="int">
		<![CDATA[
			UPDATE USER_INFO
			   SET LOGIN_FAIL_COUNT = 0
				 , LOGIN_LAST_TRY_DATE = NULL
			 WHERE USER_NUM = #{user_num}
		]]>
	</update>
	
	<update id="stopClear" parameterType="String">
		<![CDATA[
			UPDATE USER_INFO
			   SET USER_STOP_DATE = NULL
				 , USER_ENABLED = 1
			 WHERE USER_ID = #{user_id}
			   AND USER_STOP_DATE < SYSDATE
		]]>
	</update>
	
	<update id="loginFail" parameterType="int">
		UPDATE USER_INFO
		   SET LOGIN_FAIL_COUNT = LOGIN_FAIL_COUNT + 1
		     , LOGIN_LAST_TRY_DATE = SYSDATE
		 WHERE USER_NUM = #{user_num}
	</update>
	
	<insert id="loginRecord" parameterType="Map">
		INSERT INTO LOGIN_RECORD
		VALUES (
				 (
				   SELECT USER_NUM
					 FROM USER_INFO
					WHERE USER_ID = #{user_id}
				 )
			   , #{ip}
			   , #{record_check}
			   , SYSDATE
			   )
	</insert>
	
	<insert id="signUp" parameterType="UserDto">
		INSERT INTO USER_INFO
			 ( USER_NUM
			 , USER_ID
			 , USER_PW
			 , USER_NAME
			 , USER_NICK
			 , USER_PH
			 , USER_ADDR
			 , USER_ADDR_DETAIL
			 , USER_EMAIL
			 , USER_ENABLED
			 , USER_BUSINESSNUM
			 , LICENSE_LEVEL
			 , USER_ROLE
			 , USER_STOP_DATE
			 )
		VALUES (
				 USER_INFO_SEQ.NEXTVAL
			   , #{user_id}
			   , #{user_pw}
			   , #{user_name}
			   , #{user_nick}
			   , #{user_ph}
			   , #{user_addr}
			   , #{user_addr_detail}
			   , #{user_email}
			   , 'Y'
		<choose>
			<when test="user_businessnum != null">
			   , #{user_businessnum}
			   , 1
			   , 'LICENSE'
			</when>
			<otherwise>
			   , NULL
			   , NULL
			   , 'USER'
			</otherwise>
		</choose>
			   , NULL
			   )
	</insert>
	
	<insert id="signUpLog" parameterType="String">
		INSERT INTO LOGIN
		VALUES (
				 (
				   SELECT USER_NUM 
					 FROM USER_INFO 
					WHERE USER_ID = #{user_id}
				 )
			   , 0
			   , 'N'
			   , NULL
			   )
	</insert>
	
	<select id="nickChk" parameterType="String" resultType="String">
		SELECT USER_NUM
		  FROM USER_INFO
		 WHERE USER_NICK = #{user_nick}
	</select>
	
	<select id="pwChk" parameterType="Map" resultType="String">
		SELECT USER_ID
		  FROM USER_INFO
		 WHERE USER_ID = #{user_id}
		   AND USER_PW = #{user_pw}
	</select>
	
	<update id="userUpdate" parameterType="UserDto">
		UPDATE USER_INFO
		   SET USER_NICK = #{user_nick}
			 , USER_PH = #{user_ph}
			 , USER_ADDR = #{user_addr}
			 , USER_ADDR_DETAIL = #{user_addr_detail}
			 , USER_EMAIL = #{user_email}
		 <if test="user_pw != null">
			 , USER_PW = #{user_pw}
		 </if>
		 WHERE USER_NUM = #{user_num}
	</update>
	
	<select id="inquiry" parameterType="UserDto" resultType="UserDto">
		SELECT USER_ID
		  FROM USER_INFO
		 WHERE USER_EMAIL = #{user_email}
		 <if test="user_name != null">
		   AND USER_NAME = #{user_name}
		 </if>
		 <if test="user_id != null">
		   AND user_id = #{user_id}
		 </if>
	</select>
	
	<update id="pwChange" parameterType="Map">
		UPDATE USER_INFO
		   SET USER_PW = #{user_pw}
		 WHERE USER_ID = #{user_id}
	</update>
	
	<select id="loginRecordList" parameterType="int" resultType="RecordDto">
		<![CDATA[
		SELECT RECORD_IP
			 , RECORD_CHECK
			 , RECORD_DATE
		  FROM (
				SELECT ROW_NUMBER() OVER (ORDER BY RECORD_DATE DESC) AS RN
					 , USER_NUM
					 , RECORD_IP
					 , RECORD_CHECK
					 , RECORD_DATE
				  FROM LOGIN_RECORD
				 WHERE USER_NUM = #{user_num}
				   AND RECORD_DATE+7 >= SYSDATE
			   )
		 WHERE RN < 10
		]]>
	</select>
	
	<delete id="loginRecordDel">
		<![CDATA[
		DELETE FROM LOGIN_RECORD
		 WHERE RECORD_DATE+7 < SYSDATE
		]]>
	</delete>
</mapper>