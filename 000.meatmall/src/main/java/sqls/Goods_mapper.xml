<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.goods">

<!-- 메인 상품리스트 -->
	<select id="getMainList" resultType="GoodsDto">
		SELECT G.GOODS_NUM
			 , G.GOODS_TITLE
			 , G.USER_NUM
			 , G.GOODS_IMG_TITLE
			 , G.GOODS_DELFLAG
			 , G.GOODS_COST
			 , U.USER_NICK
		  FROM (
		         SELECT ROW_NUMBER() OVER (ORDER BY GOODS_NUM DESC) AS RN
		              , GOODS_NUM
			 		  , GOODS_TITLE
					  , USER_NUM
					  , GOODS_IMG_TITLE
					  , GOODS_DELFLAG
					  , GOODS_COST
		           FROM GOODS
		          WHERE GOODS_DELFLAG = 1
		       ) G
		     , USER_INFO U
		 WHERE G.USER_NUM = U.USER_NUM
		   AND CEIL(G.RN/8) = 1
	</select>

<!-- 전체 상품 + 페이징 -->
	<select id="allGoods" resultType="GoodsDto" parameterType="String">
		SELECT G.GOODS_NUM
	   		 , G.GOODS_TITLE
	   		 , G.USER_NUM
	   		 , G.GOODS_IMG_TITLE
	   		 , G.GOODS_DELFLAG
	   		 , G.GOODS_COST
	   		 , U.USER_NICK
     	  FROM (
		         SELECT ROW_NUMBER() OVER (ORDER BY GOODS_NUM DESC) AS RN
		              , GOODS_NUM
	   		 		  , GOODS_TITLE
	   				  , USER_NUM
	   				  , GOODS_IMG_TITLE
	   				  , GOODS_DELFLAG
	   				  , GOODS_COST
		           FROM GOODS
		       ) G
		     , USER_INFO U
		 WHERE G.USER_NUM = U.USER_NUM
		   AND CEIL(G.RN/6) = #{pnum}
	</select>

<!-- 전체상품 (삭제여부) + 페이징 -->
	<select id="getEnabled" resultType="GoodsDto" parameterType="String">
		SELECT G.GOODS_NUM
			 , G.GOODS_TITLE
			 , G.USER_NUM
			 , G.GOODS_IMG_TITLE
			 , G.GOODS_DELFLAG
			 , G.GOODS_COST
			 , U.USER_NICK
		  FROM (
		         SELECT ROW_NUMBER() OVER (ORDER BY GOODS_NUM DESC) AS RN
		              , GOODS_NUM
			 		  , GOODS_TITLE
					  , USER_NUM
					  , GOODS_IMG_TITLE
					  , GOODS_DELFLAG
					  , GOODS_COST
		           FROM GOODS
		          WHERE GOODS_DELFLAG = 1 
		       ) G
		     , USER_INFO U
		 WHERE G.USER_NUM = U.USER_NUM
		   AND CEIL(G.RN/6) = #{pnum}
	</select>	
	
<!-- 전체 페이지 수 -->         
	<select id="allPcount" resultType="int">
		SELECT CEIL(COUNT(GOODS_NUM)/6)
		  FROM GOODS
	</select>
	
<!-- 전체 페이지 수 (삭제여부) -->         
	<select id="enabledPcount" resultType="int">
		SELECT CEIL(COUNT(GOODS_NUM)/6)
		  FROM GOODS
		 WHERE GOODS_DELFLAG = 1
	</select>

<!-- 부위별 카테고리 -->
	<select id="category" resultType="Goods_kindDto">
		SELECT KIND_NUM
			 , KIND_NAME
 		  FROM GOODS_KIND
 		 ORDER BY KIND_NUM
	</select>
	
<!-- 카테고리 추가 -->
	<insert id="insertCategory" parameterType="String">
		INSERT INTO GOODS_KIND
		VALUES (
				 GOODS_KIND_SEQ.NEXTVAL
			   , #{kind_name}
			   )
	</insert>
	
<!-- 카테고리 삭제 -->
	<delete id="delCategory" parameterType="Map">
		DELETE FROM GOODS_KIND
 		 WHERE KIND_NUM IN
 			<foreach collection="chk" item="kind_num" open="(" close=")" separator=",">
			   #{kind_num}
			</foreach>
	</delete>
	
<!-- 카테고리별 상품 -->
	<select id="categoryGoods" resultType="GoodsDto" parameterType="Map">
		SELECT G.GOODS_NUM
			 , G.GOODS_TITLE
			 , G.USER_NUM
			 , G.GOODS_IMG_TITLE
			 , G.GOODS_DELFLAG
			 , G.KIND_NUM
			 , G.GOODS_COST
			 , U.USER_NICK
		  FROM (
		         SELECT ROW_NUMBER() OVER (ORDER BY GOODS_NUM DESC) AS RN
		              , GOODS_NUM
			 		  , GOODS_TITLE
					  , USER_NUM
					  , GOODS_IMG_TITLE
					  , GOODS_DELFLAG
					  , KIND_NUM
					  , GOODS_COST
		           FROM GOODS
		          WHERE KIND_NUM = #{kind_num}
		       ) G
		     , USER_INFO U
		 WHERE G.USER_NUM = U.USER_NUM
		   AND CEIL(G.RN/6) = #{pnum}
	</select>
	
<!-- 카테고리별 상품 (삭제여부) -->
	<select id="getCateEnabled" resultType="GoodsDto" parameterType="String">
		SELECT G.GOODS_NUM
			 , G.GOODS_TITLE
			 , G.USER_NUM
			 , G.GOODS_IMG_TITLE
			 , G.GOODS_DELFLAG
			 , G.KIND_NUM
			 , G.GOODS_COST
			 , U.USER_NICK
		  FROM (
		         SELECT ROW_NUMBER() OVER (ORDER BY GOODS_NUM DESC) AS RN
		              , GOODS_NUM
			 		  , GOODS_TITLE
					  , USER_NUM
					  , GOODS_IMG_TITLE
					  , GOODS_DELFLAG
					  , KIND_NUM
					  , GOODS_COST
		           FROM GOODS
		          WHERE GOODS_DELFLAG = 1
		            AND KIND_NUM = #{kind_num}
		       ) G
		     , USER_INFO U
		 WHERE G.USER_NUM = U.USER_NUM
		   AND CEIL(G.RN/6) = #{pnum}
	</select>
	
	<sql id="pcount">
		SELECT CEIL(COUNT(GOODS_NUM)/6)
		  FROM GOODS
		 WHERE KIND_NUM = #{kind_num}
	</sql>
	<!-- 카테고리 페이지 수 -->         
	<select id="allCatePcount" resultType="int" parameterType="String">
		<include refid="pcount" />
	</select>
	
	<!-- 카테고리 페이지 수 (삭제여부) -->        
	<select id="enabledCatePcount" resultType="int" parameterType="String">
		<include refid="pcount" />
		   AND GOODS_DELFLAG = 1
	</select>	
	
<!-- 상품 추가 -->
	<insert  id="insertGoods" parameterType="GoodsDto">
		INSERT INTO GOODS
		VALUES (
		 		 GOODS_SEQ.NEXTVAL
	   		   , #{goods_title}
	   		   , #{user_num}
	  		   , #{goods_img_title}
	  		   , #{goods_img_detail}
	  		   , SYSDATE
	  		   , 1
	  		   , #{kind_num}
	  		   , #{goods_history}
	  		   , #{goods_cost}
	   		   )
	</insert>
	 
<!-- 상품 추가 (옵션) -->
	<insert id="insertGoods_option" parameterType="Goods_optionDto">
		INSERT INTO GOODS_OPTION
		VALUES (
				 GOODS_OPTION_SEQ.NEXTVAL
		<choose>
			<when test="goods_num == 0">
			   , (SELECT MAX(GOODS_NUM) FROM GOODS)
			</when>
			<otherwise>
			   , #{goods_num}
			</otherwise>
		</choose>
	  		   , #{option_name}
	  		   , #{option_count}
	  		   , #{option_weight}
	  		   )
	</insert>
	
<!-- 상품 추가 (부위 선택) -->
	<select id="kind_num" resultType="Goods_kindDto">
		SELECT KIND_NUM, KIND_NAME
 		  FROM GOODS_KIND
 		 ORDER BY KIND_NUM
	</select>
	
<!-- 상품 상세 -->
	<select id="getGoods" resultType="GoodsDto" parameterType="GoodsDto">
		SELECT G.GOODS_NUM
			 , G.GOODS_TITLE
			 , G.USER_NUM
			 , G.GOODS_IMG_TITLE
			 , G.GOODS_IMG_DETAIL
			 , G.KIND_NUM
			 , G.GOODS_HISTORY
			 , G.GOODS_COST
			 , U.USER_NICK
		  FROM GOODS G, USER_INFO U
		 WHERE G.USER_NUM = U.USER_NUM
		   AND G.GOODS_NUM = #{goods_num}
	</select>
	
	
<!-- 상품 상세 (옵션) -->
	<select id="getGoods_option" resultType="Goods_optionDto" parameterType="Goods_optionDto">
		SELECT OPTION_NUM
			 , GOODS_NUM
			 , OPTION_NAME
			 , OPTION_COUNT
			 , OPTION_WEIGHT
 		  FROM GOODS_OPTION
 		 WHERE GOODS_NUM = #{goods_num}
		 ORDER BY OPTION_NUM
	</select>
	
<!-- 전체 상품에서 삭제 -->
	<update id="delGoods" parameterType="Map">
		UPDATE GOODS
 		   SET GOODS_DELFLAG = 0
 		 WHERE GOODS_NUM IN
 			<foreach collection="chk" item="goods_num" open="(" close=")" separator=",">
			   #{goods_num}
			</foreach>
	</update>
	
<!-- 카테고리 상품에서 삭제 -->
	<update id="delCateGoods" parameterType="Map">
		UPDATE GOODS
 		   SET GOODS_DELFLAG = 0
 		 WHERE GOODS_NUM IN
 			<foreach collection="chk" item="goods_num" open="(" close=")" separator=",">
			   #{goods_num}
			</foreach>
		   AND KIND_NUM = #{kind_num}
	</update>
	
<!-- 상품 수정 -->
	<update id="upGoods" parameterType="GoodsDto">
		UPDATE GOODS
  		   SET GOODS_TITLE = #{goods_title}
		<if test="goods_img_title != null">
			 , GOODS_IMG_TITLE = #{goods_img_title}
		</if>
		<if test="goods_img_detail != null">
			 , GOODS_IMG_DETAIL = #{goods_img_detail}
		</if>	 
			 , GOODS_DATE = SYSDATE
	  		 , GOODS_DELFLAG = 1
			 , KIND_NUM = #{kind_num}
			 , GOODS_HISTORY = #{goods_history}
			 , GOODS_COST = #{goods_cost}
 		 WHERE GOODS_NUM = #{goods_num}
	</update>
	
<!-- 상품 수정 (옵션) -->
	<update id="upGoods_option" parameterType="Goods_optionDto">
		UPDATE GOODS_OPTION
  		   SET OPTION_NAME = #{option_name}
			 , OPTION_COUNT = #{option_count}
			 , OPTION_WEIGHT = #{option_weight}
 		 WHERE OPTION_NUM = #{option_num}
	</update>
	
<!-- 장바구니 목록 -->
	<select id="basketList" resultType="BasketDto" parameterType="int">
		SELECT B.USER_NUM
			 , B.BASKET_COUNT
			 , B.GOODS_NUM
			 , G.GOODS_TITLE
			 , G.GOODS_IMG_TITLE
			 , G.GOODS_COST
			 , G.USER_NUM AS SELLER_NUM
			 , O.OPTION_NUM
			 , O.OPTION_NAME
			 , O.OPTION_WEIGHT
		  FROM BASKET B
			 , GOODS G
			 , GOODS_OPTION O
		 WHERE B.GOODS_NUM = G.GOODS_NUM
		   AND B.OPTION_NUM = O.OPTION_NUM
		   AND B.USER_NUM = #{user_num}
	</select>
	
<!-- 장바구니 추가 -->
	<insert id="insertBasket" parameterType="BasketDto">
		INSERT INTO BASKET
		VALUES (
			     #{user_num}
			   , #{goods_num}
			   , #{option_num}
			   , #{basket_count}
			   )
	</insert>

<!-- 장바구니 삭제 -->
	<delete id="delBasket" parameterType="Map">
		DELETE FROM BASKET
 		 WHERE OPTION_NUM IN
 			<foreach collection="chk" item="option_num" open="(" close=")" separator=",">
			   #{option_num}
			</foreach>
	</delete>
	
	<select id="userInfo" resultType="UserDto" parameterType="int">
		SELECT USER_NUM
			 , USER_ID
			 , USER_NAME
			 , USER_NICK
			 , USER_PH
			 , USER_ADDR
			 , USER_EMAIL
			 , USER_BUSINESSNUM
			 , LICENSE_LEVEL
			 , USER_ROLE
 		  FROM USER_INFO
		 WHERE USER_NUM = #{user_num}
	</select>
	
<!-- 주문 -->
	<insert id="insertOrder" parameterType="OrderDto">
		INSERT INTO GOODS_ORDER
		VALUES (
		 		 GOODS_ORDER_SEQ.NEXTVAL
	  		   , #{user_num}
	   		   , #{order_seller}
	  		   , #{goods_num}
			   , #{option_num}
			   , #{order_addr}
			   , #{order_money}
			   , SYSDATE
			   , NULL
			   , 1
			   , #{order_count}
			   )
	</insert>
	
	<update id="optionSell" parameterType="Map">
		UPDATE GOODS_OPTION
		   SET OPTION_COUNT = OPTION_COUNT - #{option_count}
		 WHERE OPTION_NUM = #{option_num}
	</update>
	
<!-- 후기 목록 -->
	<select id="reviewList" parameterType="int" resultType="ReviewDto">
		SELECT R.REVIEW_NUM
		     , R.ORDER_NUM
		     , R.GOODS_NUM
		     , R.USER_NUM
		     , R.USER_ID
		     , R.REVIEW_CONTENT
		     , R.REVIEW_SCORE
		     , R.REVIEW_DATE
		     , G.GOODS_TITLE
		     , O.OPTION_NAME
		     , U.USER_NICK
		  FROM REVIEW R
			 , GOODS G
			 , GOODS_OPTION O
			 , USER_INFO U
		 WHERE R.GOODS_NUM = G.GOODS_NUM
		   AND R.GOODS_NUM = O.GOODS_NUM
		   AND R.USER_ID = U.USER_ID
		   AND R.GOODS_NUM = #{goods_num}
		 ORDER BY R.REVIEW_NUM DESC
	</select>
	
<!-- 쿠폰목록(관리자) -->
	<select id="adminCouponList" parameterType="String" resultType="CouponDto">
		SELECT COUPON_NUM
			 , COUPON_NAME
			 , COUPON_IMG
			 , COUPON_MONEY
			 , COUPON_PERIOD
		  FROM (
		         SELECT ROW_NUMBER() OVER (ORDER BY COUPON_NUM DESC) AS RN
		              , COUPON_NUM
					  , COUPON_NAME
					  , COUPON_IMG
					  , COUPON_MONEY
					  , COUPON_PERIOD
		           FROM COUPON
		       )
		 WHERE CEIL(RN/6) = #{pnum}
	</select>
	
<!-- 쿠폰등록(관리자) -->
	<insert id="insertCoupon" parameterType="CouponDto">
		INSERT INTO COUPON
		VALUES (
				 COUPON_SEQ.NEXTVAL
			   , #{coupon_name}
			   , #{coupon_img}
			   , #{coupon_money}
			   , #{coupon_period}
			   )
	</insert>
	
<!-- 쿠폰페이징  -->
	<select id="CouponPcount" resultType="int">
		SELECT CEIL(COUNT(COUPON_NUM)/6)
		  FROM COUPON
	</select>
	
<!-- 쿠폰목록(사용자) -->
	<select id="userCouponList" parameterType="String" resultType="User_couponDto">
		SELECT USER_COUPON_NUM
			 , COUPON_NAME
			 , COUPON_MONEY
			 , USER_COUPON_DATE
		  FROM (
		         SELECT ROW_NUMBER() OVER (ORDER BY USER_COUPON_NUM DESC) AS RN
					  , USER_COUPON_NUM
					  , COUPON_NAME
					  , COUPON_MONEY
					  , USER_COUPON_DATE
		           FROM COUPON C
		           	  , USER_COUPON U
		          WHERE C.COUPON_NUM = U.COUPON_NUM
		       )
		 WHERE CEIL(RN/6) = #{pnum}
	</select>
	
<!-- 	쿠폰 상세정보 -->
	<select id="couponDetail" parameterType="int" resultType="CouponDto">
		SELECT COUPON_NUM
			 , COUPON_NAME
			 , COUPON_MONEY
			 , COUPON_PERIOD
		  FROM COUPON
		 WHERE COUPON_NUM = #{coupon_num}
	</select>
	
<!-- 쿠폰 등록(사용자) -->
	<insert id="insertUserCoupon" parameterType="Map">
		INSERT INTO USER_COUPON
		VALUES (
			 	 USER_COUPON_SEQ.NEXTVAL
			   , (SELECT COUPON_NUM FROM COUPON WHERE COUPON_NUM = #{coupon_num})
			   , #{user_num}
			   , SYSDATE + #{coupon_period}
			   , 1
			   )
	</insert>
	
<!-- 	쿠폰목록(팝업) -->
	<select id="couponList" parameterType="int" resultType="User_couponDto">
		SELECT U.USER_COUPON_NUM
			 , C.COUPON_NAME
			 , C.COUPON_IMG
			 , C.COUPON_MONEY
			 , U.USER_COUPON_DATE
		  FROM COUPON C
		  	 , USER_COUPON U
		 WHERE C.COUPON_NUM = U.COUPON_NUM
		   AND U.USER_NUM = #{user_num}
		   AND U.USER_COUPON_DATE > SYSDATE
		   AND USER_COUPON_USE = 1
		 ORDER BY U.USER_COUPON_DATE
	</select>
	
<!-- 	상품옵션정보(바로구매용) -->
	<select id="goodsData" parameterType="int" resultType="BasketDto">
		SELECT G.GOODS_NUM
			 , G.GOODS_IMG_TITLE
			 , G.GOODS_TITLE
			 , G.USER_NUM AS SELLER_NUM
			 , G.GOODS_COST
			 , O.OPTION_NUM
			 , O.OPTION_NAME
			 , O.OPTION_WEIGHT
		  FROM GOODS G
		  	 , GOODS_OPTION O
		 WHERE G.GOODS_NUM = O.GOODS_NUM
		   AND O.OPTION_NUM = #{option_num}
	</select>
	
<!-- 	쿠폰사용 -->
	<update id="useCoupon" parameterType="int">
		UPDATE USER_COUPON
		   SET USER_COUPON_USE = 0
		 WHERE USER_COUPON_NUM = #{user_coupon_num}
	</update>
	
<!-- 구매내역 sel -->
	<sql id="orderSelect">
		SELECT R.ORDER_NUM
			 , R.ORDER_SELLER
			 , R.GOODS_NUM
			 , R.OPTION_NUM
			 , R.ORDER_ADDR
			 , R.ORDER_MONEY
			 , R.ORDER_DATE
			 , R.ORDER_DELIVERY_DATE
			 , R.ORDER_STATE
			 , R.ORDER_COUNT
			 , G.GOODS_IMG_TITLE
			 , G.GOODS_TITLE
			 , O.OPTION_NAME
		  FROM GOODS_ORDER R
		     , GOODS G
		     , GOODS_OPTION O
	</sql>
	
<!-- 구매내역 -->
	<select id="orderList" parameterType="int" resultType="OrderDto">
		<include refid="orderSelect" />
		 WHERE R.GOODS_NUM = G.GOODS_NUM
		   AND R.OPTION_NUM = O.OPTION_NUM
		   AND R.USER_NUM = #{user_num}
		 ORDER BY ORDER_NUM DESC
	</select>
	
<!-- 배송상태 변경 -->
	<update id="stateUpdate" parameterType="int">
		UPDATE GOODS_ORDER
		   SET ORDER_STATE = ORDER_STATE+1
		   WHERE ORDER_NUM = #{order_num}
	</update>
	
<!-- 판매상품 -->
	<select id="orderSelList" parameterType="Map" resultType="OrderDto">
		<include refid="orderSelect" />
		 WHERE R.GOODS_NUM = G.GOODS_NUM
		   AND R.OPTION_NUM = O.OPTION_NUM
		   AND R.ORDER_SELLER = #{user_num}
		<if test="delivery != null">
		   AND R.ORDER_STATE = 1
		</if>
		<if test="seller != null">
		   AND R.ORDER_STATE > 1
		</if>
		 ORDER BY ORDER_NUM DESC
	</select>
	
	<select id="getOrder" parameterType="int" resultType="OrderDto">
		SELECT O.ORDER_NUM
			 , O.GOODS_NUM
			 , O.ORDER_SELLER
			 , G.GOODS_IMG_TITLE
			 , G.GOODS_TITLE
			 , OP.OPTION_NAME
		  FROM GOODS_ORDER O
		 	 , GOODS G
		 	 , GOODS_OPTION OP
		 WHERE O.GOODS_NUM = G.GOODS_NUM
		   AND O.OPTION_NUM = OP.OPTION_NUM
		   AND ORDER_NUM = #{order_num}
	</select>
	
	<insert id="addReview" parameterType="ReviewDto">
		INSERT INTO REVIEW
		VALUES (
				 REVIEW_SEQ.NEXTVAL
			   , #{order_num}
			   , #{goods_num}
			   , #{user_num}
			   , #{user_id}
			   , #{review_content}
			   , #{review_score}
			   , SYSDATE
			   )
	</insert>
	
	<select id="basketCount" parameterType="int" resultType="int">
		SELECT COUNT(GOODS_NUM)
		  FROM BASKET
		 WHERE USER_NUM = #{user_num}
	</select>

<!-- 장바구니 존재여부 -->
	<select id="beBasket" parameterType="int" resultType="int">
		SELECT COUNT(OPTION_NUM)
		  FROM BASKET
		 WHERE OPTION_NUM = #{option_num}
	</select>
	
	<select id="AllCouponList" resultType="int">
		SELECT COUPON_NUM
          FROM COUPON
	</select>
	
<!-- 배너페이징  -->
	<select id="bannerPcount" resultType="int">
		SELECT CEIL(COUNT(BANNER_NUM)/6)
		  FROM BANNER
		 WHERE BANNER_END_DATE > SYSDATE
	</select>
	
	<select id="bannerList" parameterType="String" resultType="BannerDto">
		SELECT BANNER_NUM
			 , BANNER_NAME
			 , BANNER_IMG_NAME
			 , BANNER_REGIST_DATE
			 , BANNER_END_DATE
		  FROM (
			     SELECT ROW_NUMBER() OVER (ORDER BY BANNER_NUM DESC) AS RN
					  , BANNER_NUM
					  , BANNER_NAME
					  , BANNER_IMG_NAME
					  , BANNER_REGIST_DATE
					  , BANNER_END_DATE
				   FROM BANNER
				  WHERE BANNER_END_DATE > SYSDATE
			   )
		 WHERE CEIL(RN/6) = #{pnum}
	</select>
	
	<insert id="insertBanner" parameterType="BannerDto">
		INSERT INTO BANNER
		VALUES (
				 BANNER_SEQ.NEXTVAL
			   , #{banner_name}
			   , #{banner_img_name}
			   , SYSDATE
			   , SYSDATE + 7
			   )
	</insert>
	
	<select id="mainBanner" resultType="BannerDto">
		<![CDATA[
			SELECT BANNER_NUM
				 , BANNER_NAME
				 , BANNER_IMG_NAME
			  FROM (
					 SELECT ROW_NUMBER() OVER (ORDER BY BANNER_END_DATE) AS RN
						  , BANNER_NUM
						  , BANNER_NAME
						  , BANNER_IMG_NAME
					   FROM BANNER
					  WHERE BANNER_END_DATE > SYSDATE
				   )
			 WHERE RN < 5
		 ]]>
	</select>
</mapper>